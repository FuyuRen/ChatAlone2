//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(schema_name = "chat", table_name = "assoc_lone_user")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub lone_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub role_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::lone_info::Entity",
        from = "Column::LoneId",
        to = "super::lone_info::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    LoneInfo,
    #[sea_orm(
        belongs_to = "super::lone_role_info::Entity",
        from = "(Column::RoleId, Column::RoleId, Column::RoleId, Column::RoleId)",
        to = "(super::lone_role_info::Column::Id, super::lone_role_info::Column::Id, super::lone_role_info::Column::Id, super::lone_role_info::Column::Id)",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    LoneRoleInfo,
    #[sea_orm(
        belongs_to = "super::user_info::Entity",
        from = "Column::UserId",
        to = "super::user_info::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    UserInfo,
}

impl Related<super::lone_info::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LoneInfo.def()
    }
}

impl Related<super::lone_role_info::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LoneRoleInfo.def()
    }
}

impl Related<super::user_info::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserInfo.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
